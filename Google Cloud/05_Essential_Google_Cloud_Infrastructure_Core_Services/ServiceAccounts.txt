A service account is an account that belongs to your application instead of to an individual end user.

	This provides an identity for carrying out server-to-server interactions in a project without supplying user credentials

	For example: 

		If you write an application that interacts with Google Cloud Storage, you must first authenticate to either Google Cloud Storage XML API or JSON API

	You can enable service accounts and grant read-write access to the account on the instance where you plan to run your application

	Then, program the application to obtain credentials from the service account

		Your application authenticates seamlessly to the API without embedding any secret keys or credentials in your instance, image, or application code

	Service accounts are identified by an email address

-------

There are three types of service accounts: 

	user-created or custom

	built-in, and 

	Google APIs service accounts

-------

By default, all projects come with a built-in Compute Engine default service account

	Apart from the default service account, all projects come with a Google Cloud APIs service account, identifiable by the email project-number@cloudservices.gserviceaccount.com

	This is an account designed specifically to run internal Google processes on your behalf and is automatically granted the Editor role on the project

-------

Authorization is the process of determining what permissions and authenticated identity has on a set of specified resources

	Scopes are used to determine whether an authenticated identity is authorized

	Scopes can be customized when you create an instance using the default service account as shown in the screenshot

	Access scopes are actually a legacy method of specifying permissions for your VM

-------

Roles for service accounts can also be assigned to groups or users

	First, you create a service account that has the InstanceAdmin role, 

		which has permissions to create, modify, and delete virtual machine instances and disks

	Then, you treat the service account as a resource and decide who can use it by provisioning users or a group with the Service Account User role

	This allows those users to act as that service account to create, modify, and delete virtual machine instances and disks

	-------

	You assign the service accounts to the VMs when they are created, and you don't
	need to ensure that credentials have been managed correctly because Google Cloud manages security for you

-------

There are two types of Google Service Accounts.

	By default, when using service accounts within Google Cloud, for example from Compute Engine or App Engine, Google automatically manages the keys for service accounts

-------

Finally, remember that service accounts are very flexible, and that they can enable you to build an infrastructure-based level of control in your application